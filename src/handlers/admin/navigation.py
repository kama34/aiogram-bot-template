from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from utils.admin_utils import is_admin

async def back_to_search_options(callback: types.CallbackQuery, state: FSMContext, skip_message_delete=False):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –æ–ø—Ü–∏—è–º –ø–æ–∏—Å–∫–∞ –∏–∑ –ª—é–±–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    """
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!", show_alert=True)
        return
    
    try:
        await callback.answer()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ callback: {e}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    current_state = await state.get_state()
    if current_state is not None:
        await state.finish()
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if not skip_message_delete:
        try:
            await callback.message.delete()
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏/ID", callback_data="text_search"),
        types.InlineKeyboardButton("üî§ –ü–æ–∏—Å–∫ –ø–æ –±—É–∫–≤–µ", callback_data="letter_search")
    )
    keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back"))
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", reply_markup=keyboard)

def register_navigation_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    dp.register_callback_query_handler(
        back_to_search_options,
        lambda c: c.data == "search_user",
        state="*"
    )
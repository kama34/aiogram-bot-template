from aiogram import types
from sqlalchemy import func, desc, text
from services.database import get_database_session, User, Referral

async def view_referral_statistics(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    session = get_database_session()
    try:
        total_referrals = session.query(Referral).count()
        
        top_referrers_query = session.query(
            Referral.referred_by, 
            func.count(Referral.id).label('count')
        ).group_by(Referral.referred_by).order_by(text('count DESC')).limit(5)
        
        top_referrers = top_referrers_query.all()
        
        stats = f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b>\n\n" \
                f"üë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>{total_referrals}</b>\n\n" \
                f"üèÜ <b>–¢–æ–ø 5 –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏—Ö:</b>\n"
        
        for i, (referrer_id, count) in enumerate(top_referrers, 1):
            if referrer_id:
                referrer = session.query(User).filter(User.id == referrer_id).first()
                if referrer:
                    stats += f"{i}. {referrer.full_name} (@{referrer.username}): {count} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π\n"
        
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back"))
        
        await message.answer(stats, parse_mode="HTML", reply_markup=keyboard)
        
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {str(e)}")
    finally:
        session.close()
from aiogram import types
from utils.admin_utils import is_admin
from services.user_service import UserService

async def view_user_referrals(callback: types.CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!", show_alert=True)
        return
    
    try:
        await callback.answer()
    except Exception as e:
        print(f"Error answering callback: {e}")
    
    user_id = int(callback.data.replace("view_referrals_", ""))
    orig_message = callback.message
    
    user_service = UserService()
    
    try:
        target_user = user_service.get_user_by_id(user_id)
        if not target_user:
            await callback.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        referrals = user_service.get_user_referrals(user_id)
        
        await orig_message.delete()
        
        if not referrals or len(referrals) == 0:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"back_to_user_{user_id}"))
            await callback.message.answer(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user.full_name} (@{target_user.username}) –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
                reply_markup=keyboard
            )
            return
        
        total_referrals = len(referrals)
        referral_text = (
            f"üë• <b>–†–µ—Ñ–µ—Ä–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user.full_name} (@{target_user.username}):</b>\n\n"
            f"–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: <b>{total_referrals}</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n"
        )
        
        for i, ref in enumerate(referrals, 1):
            referred_user = user_service.get_user_by_id(ref.user_id)
            if referred_user:
                date_str = ref.created_at.strftime("%d.%m.%Y") if hasattr(ref, 'created_at') else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                referral_text += f"{i}. {referred_user.full_name} (@{referred_user.username}) - {date_str}\n"
        
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"back_to_user_{user_id}"))
        
        await callback.message.answer(referral_text, parse_mode="HTML", reply_markup=keyboard)
        
    except Exception as e:
        print(f"Error getting user referrals: {e}")
        await callback.message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {str(e)}")
    finally:
        user_service.close_session()
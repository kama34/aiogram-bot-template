from aiogram import types
from utils.admin_utils import is_admin
from services.order_service import OrderService
from services.product_service import get_product_name

async def view_order_details(callback: types.CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
    if not is_admin(callback.from_user.id):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞!", show_alert=True)
        return
    
    try:
        await callback.answer()
    except Exception as e:
        print(f"Error answering callback: {e}")
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–∫–∞–∑–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–±—ç–∫–∞
    order_id = callback.data.replace("order_details_", "")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        await callback.message.delete()
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –∑–∞–∫–∞–∑–æ–≤
    order_service = OrderService()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑ –ø–æ ID
        order = order_service.get_order_by_id(order_id)
        if not order:
            await callback.message.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            order_service.close_session()
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–¥–µ–ª–∞–≤—à–µ–≥–æ –∑–∞–∫–∞–∑
        user = order_service.get_user_by_id(order.user_id)
        user_name = f"{user.full_name} (@{user.username})" if user else f"ID: {order.user_id}"
        
        # –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–∞
        order_items = order_service.get_order_items(order_id)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        order_date = order.created_at.strftime("%d.%m.%Y %H:%M") if hasattr(order, "created_at") else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞–∫–∞–∑–∞
        message_text = (
            f"üìù <b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ #{order.id}</b>\n\n"
            f"üìÖ –î–∞—Ç–∞: {order_date}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n"
            f"üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {order.total_amount:.2f} ‚≠ê\n"
            f"üÜî ID –ø–ª–∞—Ç–µ–∂–∞: <code>{order.payment_id}</code>\n"
        )
        
        if hasattr(order, "shipping_address") and order.shipping_address:
            message_text += f"üì´ –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order.shipping_address}\n"
        
        if hasattr(order, "status") and order.status:
            message_text += f"üîñ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {order.status}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ
        message_text += "\n<b>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–∫–∞–∑–∞:</b>\n"
        
        if order_items:
            for i, item in enumerate(order_items, 1):
                product_name = get_product_name(item.product_id)
                item_total = item.price * item.quantity
                message_text += f"{i}. <b>{product_name}</b> - {item.quantity} —à—Ç. √ó {item.price:.2f} ‚≠ê = {item_total:.2f} ‚≠ê\n"
        else:
            message_text += "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ —ç—Ç–æ–º –∑–∞–∫–∞–∑–µ\n"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard.add(types.InlineKeyboardButton(
            "‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∑–∞–∫–∞–∑–æ–≤", 
            callback_data=f"view_orders_{order.user_id}"
        ))
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard.add(types.InlineKeyboardButton(
            "üë§ –ö –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 
            callback_data=f"back_to_user_{order.user_id}"
        ))
        
        await callback.message.answer(message_text, parse_mode="HTML", reply_markup=keyboard)
        
    except Exception as e:
        print(f"Error getting order details: {e}")
        await callback.message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞: {str(e)}")
    finally:
        order_service.close_session()
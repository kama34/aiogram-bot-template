from aiogram import types, Dispatcher
from services.product_service import get_product_price, get_product_name
from utils.logger import setup_logger

# Setup logger
logger = setup_logger('handlers.shop')

async def menu_command(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –∏ –∏—Ö —Ü–µ–Ω–∞–º–∏ –≤ –∑–≤–µ–∑–¥–∞—Ö"""
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
    products_kb = types.InlineKeyboardMarkup(row_width=2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–∞–º–∏ –≤ –∑–≤–µ–∑–¥–∞—Ö
    for product_id in range(1, 5):
        price = get_product_price(product_id)
        products_kb.add(
            types.InlineKeyboardButton(
                f"–ü—Ä–æ–¥—É–∫—Ç {product_id} - {price} ‚≠ê", 
                callback_data=f"product_{product_id}"
            )
        )
    
    await message.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=products_kb)
    
async def product_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞"""
    product_id = callback.data.replace("product_", "")
    await callback.answer()
    
    try:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
        await callback.message.delete()
    except Exception as e:
        logger.error(f"Error deleting message: {e}", exc_info=True)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∑–≤–µ–∑–¥–∞—Ö
    price = get_product_price(product_id)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
    product_kb = types.InlineKeyboardMarkup(row_width=2)
    product_kb.add(
        types.InlineKeyboardButton("üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"select_quantity_{product_id}")
    )
    product_kb.add(
        types.InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ —Ü–µ–Ω–æ–π –≤ –∑–≤–µ–∑–¥–∞—Ö
    await callback.message.answer(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç {product_id}.\n\n"
        f"üí∞ –¶–µ–Ω–∞: {price} ‚≠ê\n\n"
        f"–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ.",
        reply_markup=product_kb
    )

async def back_to_menu_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é"""
    await callback.answer()
    
    try:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–¥—É–∫—Ç–µ
        await callback.message.delete()
    except Exception as e:
        logger.error(f"Error deleting message: {e}", exc_info=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å–Ω–æ–≤–∞
    products_kb = types.InlineKeyboardMarkup(row_width=2)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–∞–º–∏
    for product_id in range(1, 5):
        price = get_product_price(product_id)
        products_kb.add(
            types.InlineKeyboardButton(
                f"–ü—Ä–æ–¥—É–∫—Ç {product_id} - {price} ‚≠ê", 
                callback_data=f"product_{product_id}"
            )
        )
    
    await callback.message.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª –º–µ–Ω—é, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=products_kb)

async def go_to_menu_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã"""
    await callback.answer()
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ—Ä–∑–∏–Ω–æ–π
    try:
        await callback.message.delete()
    except Exception as e:
        logger.error(f"Error deleting message: {e}", exc_info=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    await menu_command(callback.message)

def register_shop_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π –º–∞–≥–∞–∑–∏–Ω–∞"""
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    dp.register_message_handler(menu_command, lambda message: message.text == "üõí –ú–∞–≥–∞–∑–∏–Ω", state="*")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
    dp.register_callback_query_handler(product_callback, lambda c: c.data.startswith("product_"))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    dp.register_callback_query_handler(back_to_menu_callback, lambda c: c.data == "back_to_menu")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–æ–≤–∞—Ä–∞–º" –≤ –∫–æ—Ä–∑–∏–Ω–µ
    dp.register_callback_query_handler(go_to_menu_callback, lambda c: c.data == "go_to_menu")